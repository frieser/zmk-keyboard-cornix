/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70

// mouse accelleration
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/pointing.h>

// Layers
#define BASE 0
#define SYMBOL 1
#define NAVI   2
#define NUM    3
#define MACRO  4
#define ADJUST 5
/* #define DEBUG  7 */
/* #define GRAPHITE 8 */

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    // Activate ADJUST layer by pressing raise and lower

    macros {
        email_macro: email_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                    = <&kp F &kp R &kp I &kp E &kp S &kp E &kp R &kp P &kp A &kp L &kp D &kp I>
                    , <&kp AT>  /* @ */
                    , <&kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>
                    ;
        };
        my_user_macro: my_user_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;  
            tap-ms = <20>;
            bindings = <&kp E &kp N0 &kp N5 &kp N3 &kp N2 &kp N7 &kp N4>;
        };
    };
    behaviors {
        mm_minus_pipe: mm_minus_pipe {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mm_dot_comma: mm_dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mm_quote_colon: mm_quote_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //flavor = "balanced";

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // for quick tapping; shift+~

            hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };

    /* conditional_layers { */
    /*     compatible = "zmk,conditional-layers"; */
    /**/
    /*     adjust_layer { */
    /*         if-layers = <3 2>; */
    /*         then-layer = <4>; */
    /*     }; */
    /* }; */

    combos {
        compatible = "zmk,combos";

        /* cb_ltm { */
        /*     bindings = <&kp ESC>; */
        /*     key-positions = <2 4>; */
        /*     layers = <0 1>; */
        /* }; */

        cb_lm {
            bindings = <&kp TAB>;
            key-positions = <14 15 16>;
            layers = <0 1>;
        };

        cb_enter {
            bindings = <&kp RET>;
            key-positions = <21 20 19>;
            layers = <0 1>;
        };

        /* layer3 { */
        /*     bindings = <&kp N3>; */
        /*     key-positions = <5 6>; */
        /* }; */

        /* layer4 { */
        /*     bindings = <&kp N4>; */
        /*     key-positions = <5 6>; */
        /* }; */
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp TAB  &kp Q          &kp W         &kp E          &kp R                &kp T                      &kp Y         &kp U                &kp I          &kp O         &kp P             &kp BSLH
&kp ESC  &hm_l LGUI A   &hm_l LALT S  &hm_l LCTRL D  &hm_shift_l LSHFT F  &kp G                      &kp H         &hm_shift_r RSHFT J  &hm_r RCTRL K  &hm_r RALT L  &mm_quote_colon   &kp SQT
&mo 4    &hm_l LGUI Z   &kp X         &kp C          &kp V                &kp B        &none  &none  &kp N         &kp M                &mm_minus_pipe &mm_dot_comma &hm_l RGUI FSLH   &kp BACKSPACE
&none    &none          &none         &kp ESCAPE     &lt 4 BACKSPACE      &lt 2 SPACE                &lt 1 ENTER   &lt 3 ESCAPE         &kp BACKSPACE  &none         &none             &none
            >;
            sensor-bindings = <&inc_dec_kp K_VOL_UP K_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Symbol_layer {
            display-name = "Symbols";

            // TODO: Some binds are waiting for shifted keycode support.
            // -------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&none  &kp GRAVE  &kp ASTRK &kp EQUAL &kp EXCL  &kp CARET                  &kp SQT    &kp DQT      &kp PRCNT  &kp BSLH   &kp TILDE  &kp PIPE
&none  &kp N0     &kp LBKT  &kp LBRC  &kp LPAR  &kp UNDER                  &kp MINUS  &kp RPAR     &kp RBRC   &kp RBKT   &kp DLLR   &kp SQT
&none  &kp HASH   &kp AMPS  &kp AT    &kp LT    &kp FSLH   &trans  &trans  &kp EQUAL  &kp GT       &kp COMMA  &kp DOT    &kp SEMI   &none
&none  &none      &none     &none     &trans    &kp TAB                     &trans     &trans       &trans     &none      &none      &none
            >;
            sensor-bindings = <&inc_dec_kp K_VOL_UP K_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Navi_layer {
            display-name = "Navi";
            bindings = <
&none &none  &kp K_PREVIOUS  &kp K_VOLUME_UP   &kp K_NEXT        &none                  &none           &mkp MB1        &msc SCRL_UP    &mkp MB2           &none &none
&none &none  &mkp MB2        &kp K_MUTE        &mkp MB1          &none                  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT    &none &none
&none &none  &mkp MB3        &kp K_VOLUME_DOWN &kp K_PLAY_PAUSE  &none  &trans  &trans  &none           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT    &none &none
&none &none  &none           &mkp MB3          &trans            &trans                 &mkp MB1        &mkp MB2        &trans          &none              &none &none
            >;
        };

        KeyPad_layer {
            display-name = "NumPad";
            bindings = <
&none &none   &kp N7      &kp N8  &kp N9   &kp KP_PLUS                        &none           &kp HOME        &kp PAGE_UP     &kp INSERT       &none            &none 
&none &none   &kp N4      &kp N5  &kp N6   &kp KP_MINUS                       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &none            &none
&none &kp N0   &kp N1      &kp N2  &kp N3   &kp KP_MULTIPLY &trans  &trans     &none           &kp END         &kp PAGE_DOWN   &trans           &kp C_RESET      &none
&none &kp N0  &kp KP_DOT  &kp N0  &kp DEL  &kp N0                             &none           &none           &none           &none            &none            &mo 7
            >;
        };
        Macro_layer {
            display-name = "Macro";

            bindings = <
&none &none           &none &none &none &none               &none &none &none &none &none             &none
&none &none           &none &none &none &none               &none &none &none &none &none             &none
&none &email_macro    &none &none &none &none &trans &trans &none &none &none &none &my_user_macro    &none
&none &none           &none &none &none &none               &none &none &none &none &none             &none
            >;
        };

/**/
/**/
/*         Debug_layer { */
/*             display-name = "Debug"; */
/**/
/*             // ---------------------------------------------------------------------------------------------------------------------------- */
/*             // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       | */
/*             // | EXTPWR | BTCLR | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       | */
/*             // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       | */
/*             // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       | */
/*             //                    |         |         |         |         |         | |      |      |      |       |      | */
/**/
/*             bindings = < */
/* &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none        &none  &none   &none  &none  &none */
/* &none       &none         &none         &none         &none         &none                         &none        &none  &none   &none  &none  &none */
/* &none       &none         &none         &none         &none         &bootloader   &trans  &trans  &bootloader  &none  &none   &none  &none  &none */
/* &none       &none         &none         &none         &none         &none                         &none        &none  &kp N7  &none  &none  &none */
/*             >; */
/*         }; */
    };
};
